#max_obstacle_height: 0.60  # assume something like an arm is mounted on top of the robot

# Obstacle Cost Shaping (http://wiki.ros.org/costmap_2d/hydro/inflation)
#robot_radius: 0.70  # distance a circular robot should be clear of the obstacle (kobuki: 0.18)
footprint: [[1, 0], [-0.5, 0.866], [-0.5, -0.866]]  # if the robot is not circular

map_type: voxel

obstacle_layer:
  enabled:              true
  
  # Global Filtering Parametes
  max_obstacle_height:  0.6
  obstacle_range: 2.5
  raytrace_range: 3.0
  
  # Obstacle Costmap Plugin
  track_unknown_space:  true    #true needed for disabling global path planning through unknown space
  footprint_clearing_enabled: true
  
  # Voxel Costmap Plugin
  origin_z:             0.0
  z_resolution:         0.2
  z_voxels:             2
  unknown_threshold:    2#15
  mark_threshold:       0
  publish_voxel_map: false
  
  combination_method:   1
  
  # Sensor management parameters
  observation_sources: scan
  scan:
    data_type: LaserScan
    topic: scan
    marking: true
    clearing: true
    #min_obstacle_height: 0.0
    #max_obstacle_height: 0.15
  # for debugging only, let's you see the entire voxel grid

#cost_scaling_factor and inflation_radius were now moved to the inflation_layer ns
inflation_layer:
  enabled:              true
  cost_scaling_factor:  5.0  # exponential rate at which the obstacle cost drops off (default: 10)
  inflation_radius:     0.5  # max. distance from an obstacle at which costs are incurred for planning paths.

static_layer:
  enabled:              true
  

